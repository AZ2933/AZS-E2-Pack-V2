@name The Big E's Configurable Simplistic Holo-Walschearts V0.52.98 (SG Preset) [Realistics By AZ]
@inputs Values:array WheelRotation Reverser
#@outputs #Bruh
@persist EccMul Values:array EccSwingL EccSwingR WheelRotation Base:entity VSMul VSL VSR Reverser PRWidth Scale ComboSwingL ComboSwingR ComboPosL ComboPosR CMR PR:entity PL:entity 
@persist P EM EA EO:vector CO:vector CAO CAM CL UO:vector UL ERL VSM EccAngL EccAngR ValveStemMul OGRotation RotationOffset BottomComboDetailScale BottomComboDetailScaleEx RadiusRodLength
@persist ValveRodAngL ValveRodAngR RodMat:string UnionConnecterDetails EXP [LeftExpansionParent,RightExpansionParent]:vector E2MSion:string RadiusSlide
@trigger WheelRotation #Idk if necassary 
#Valve Gear is a lot more complex than the main set of rods, so they will require a lot more manual editing than the base e2. 
#However, it will still be able to be somewhat automated.
#1st For Pepsidoggo's 2-6-2, then the mallet (2-8-8-0), & now it's optional (and please edit it if you know how to use e2 in general). 
#/\ (https://steamcommunity.com/profiles/76561198360291595/)
#Edited Simplistics into Simple-Realistics By AZ2933 (https://steamcommunity.com/id/zentral_boy/)
#The second decimal depends on how many changes or updates i guess. idk lol its one of those 2
#Color fix by Crisps (https://steamcommunity.com/profiles/76561198194898770/)
#Valve stem detail by LazerHax (https://steamcommunity.com/profiles/76561198164429557/)

if(first()|dupefinished()|duped()){

###### IGNORE THESE IGNORE THESE IGNORE THESE #################################################################################################################################################################################################################################
PRWidth=Values[1,number]        #IGNORE THIS
PWidth=Values[2,number]         #IGNORE THIS
RodMat=Values[3,string]         #IGNORE THIS
Wheel=Values[4,entity]          #IGNORE THIS
PistonHeight=Values[5,number]   #IGNORE THIS
PistonForward=Values[6,number]  #IGNORE THIS
PistonAngle=Values[7,number]    #IGNORE THIS
Scale=Values[8,number]          #IGNORE THIS
Radius=Values[9,number]         #IGNORE THIS
Base=Values[10,entity]          #IGNORE THIS
PR=Values[11,entity]            #IGNORE THIS
PL=Values[12,entity]            #IGNORE THIS
##########################################################################################################################
#READ THE INSTRUCTIONS NEXT TO THE VARIABLES BEFORE ASKING FOR HELP

EccMul=10.5                                  #Controls how far back and forward the eccentric crank moves
EccAng=-5                                  #Controls the angle offset of the eccentric
Ecc_n_Combo_Width=1.5                        #It doesn't bend bruh (Sometimes, sometimes not, who knows)
EccOffset=vec(-11.75,0+Ecc_n_Combo_Width,5)   #Controls the positional offest of the eccentric cranks from their default position.
ComboOffset=vec(-19,0+Ecc_n_Combo_Width,0) #Controls the positional offest of the combination levers from their default position.
ComboAngMul=20                             #Controls the swing angle in degrees of the combination lever.
ComboAngOffset=-8.5                        #Controls the angle offset of the combination lever.
ComboLength=25                             #Controls the length of the combination lever.
UnionOffset=vec(0,0,0)                     #Controls the positional offest of the combination levers from their default position.
UnionLength=13                             #Controls the length of the union link.
EccentricRodLength=34.5                    #Self Explanatory
BottomComboDetailScale=1.55                #If the union link is still clipping through after everything you've done you can resize the length and height
BottomComboDetailScaleEx=1                 #Ex = Extra if you couldnt notice, mainly for the width but i suggest using this if you have a good reason to.
RadiusRodLength=39.1
Color = vec(255)                           #Self Explanatory
UnionConnecterDetails=0                    #The simple on and off switch code, idk why I did this but ig its actually reasonable lol 
StemSideNumber=0                           #Literally the sides being moved onto the stem lol (- = Right, + = Left)
StemLength=0                               #Self Explanatory [MAX: 36]
Expanstional=1                             #0 = Blocky, 1 = Hotdog (Idk how to explain them ok lol)
#New shit by az lol (DONT TOUCH, ONLY IF NECESSARY)
ValveStemMul=1 
OGRotation=90
RotationOffset=0                           #Makes the swing that connects to the WheelRotation more "offset"
##########################################################################################################################################################
EM=EccMul
EA=EccAng
EO=EccOffset
CO=ComboOffset
CAM=ComboAngMul
CAO=ComboAngOffset
CL=ComboLength
UO=UnionOffset
UL=UnionLength
ERL=EccentricRodLength
VSM=ValveStemMul
BCDS=BottomComboDetailScale
BCDSE=BottomComboDetailScaleEx
RRL=RadiusRodLength
UCD=UnionConnecterDetails
SSN=StemSideNumber
SL=StemLength
EXP=Expanstional

#----------------------------------------#

if(EXP == 0){
LeftExpansionParent = vec(0*Scale,0*Scale,-19*Scale)
RightExpansionParent = vec(0*Scale,0*Scale,-19*Scale)
RadiusWideness = 0.5
E2MSion = "magtrains/invisible"
RadiusSlide = 1
}elseif(EXP == 1){
LeftExpansionParent = vec(-2.18*Scale,0*Scale,-15.45*Scale)
RightExpansionParent = vec(-2.18*Scale,0*Scale,-15.45*Scale)
RadiusWideness = 0.82
E2MSion = RodMat
RadiusSlide = 0
}

#----------------------------------------#

#Crank Left/Parent
A=1
B=Wheel
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(12.5,180,0)) )
holoModel(A, "models/unionssteamkits/ps-4_rods_eccentriccrank_b.mdl")
holoMaterial(A,RodMat)
holoPos(A,B:toWorld(vec(0*Scale,(PRWidth+4)*Scale,-Radius*Scale)))
holoScale(A, vec(0.04425*Radius*Scale))
holoColor(A,Color)
A=2
B=Wheel
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,90)) )
holoModel(A, "models/sprops/cylinders/size_3/cylinder_6x6.mdl")
holoMaterial(A,RodMat)
holoPos(A,B:toWorld(vec(0*Scale,(PRWidth-0.5)*Scale,-Radius*Scale)))
holoScale(A, vec(0.11*Radius*Scale,0.11*Radius*Scale,1*Scale))
holoColor(A,Color)
A=3
B=Wheel
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(Radius/2.9*Scale,(PRWidth+5)*Scale,0*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,Color)
#Crank Right/Parent
A=4
B=Wheel
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(153-12.5,0,0)) )
holoModel(A, "models/unionssteamkits/ps-4_rods_eccentriccrank_b.mdl")
holoMaterial(A,RodMat)
holoPos(A,B:toWorld(vec(-Radius*Scale,(-PRWidth-4)*Scale,0*Scale)))
holoScale(A, vec(0.04425*Radius*Scale))
holoColor(A,Color)
A=5
B=Wheel
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,90)) )
holoModel(A, "models/sprops/cylinders/size_3/cylinder_6x6.mdl")
holoMaterial(A,RodMat)
holoPos(A,B:toWorld(vec(-Radius*Scale,(-PRWidth+0.5)*Scale,0*Scale)))
holoScale(A, vec(0.11*Radius*Scale,0.11*Radius*Scale,1*Scale))
holoColor(A,Color)
A=6
B=Wheel
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(0*Scale,(-PRWidth-5)*Scale,-Radius/2.9*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,Color)
#Eccentric Crank Left Parent
A=7
B=Base
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(50*Scale,(PRWidth+4)*Scale,15*Scale)+(EO*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,Color)
#Eccentric Rod Left Parent
A=8
B=holoEntity(7)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(LeftExpansionParent))
holoScale(A, vec(0*Scale))
holoColor(A,Color)
#Eccentric Crank Right Parent
A=9
B=Base
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(50*Scale,(-PRWidth-4)*Scale,15*Scale)+(EO*vec(1,-1,1)*Scale))) 
holoScale(A, vec(0*Scale))
holoColor(A,Color)
#Eccentric Rod Right Parent
A=10
B=holoEntity(9)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(RightExpansionParent))
holoScale(A, vec(0*Scale))
holoColor(A,Color)
#Valve Rod Parent Right
A=13
B=holoEntity(7)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(0*Scale,0*Scale,0*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,Color)
#Valve Rod Parent Left
A=14
B=holoEntity(9)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(0*Scale,0*Scale,0*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,Color)
#Union Link Parent Left
A=15
B=PL
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(0*Scale,4*Scale,0*Scale)+UO*Scale))
holoScale(A, vec(0*Scale))
holoColor(A,Color)
#Union Link Parent Right
A=16
B=PR
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(0*Scale,-4*Scale,0*Scale)+UO*vec(1,-1,1)*Scale))
holoScale(A, vec(0*Scale))
holoColor(A,Color)
#Combination Lever Parent Left
A=17
B=Base
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(100*Scale,(PRWidth+4)*Scale,22*Scale)+CO*Scale))
holoScale(A, vec(0*Scale))
holoColor(A,Color)
#Combination Lever Parent Right
A=18
B=Base
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(0,0,0)) )
holoScale(A, vec(0*Scale))
holoColor(A,Color)

#Combination Lever to Union Link Parent Left
A=19
B=holoEntity(17)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(0*Scale,0.5*Scale,-CL*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,Color)
#Combination Lever to Union Link Parent Right
A=20
B=holoEntity(18)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(0*Scale,-0.5*Scale,-CL*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,Color)

###################################################################
#Valve Gear Detailing

#Crank Left Detailing
A=21
B=holoEntity(3)
holoCreate(A)
holoModel(A,"models/sprops/cylinders/size_2/cylinder_3x3.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,90)) )
holoPos(A,B:toWorld(vec(0*Scale,2*Scale,0*Scale)))
holoScale(A, vec(1.4*Scale,1.4*Scale,1.05*Scale))
holoColor(A,Color)
#Crank Right Detailing
A=22
B=holoEntity(6)
holoCreate(A)
holoModel(A,"models/sprops/cylinders/size_2/cylinder_3x3.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,90)) )
holoPos(A,B:toWorld(vec(0*Scale,-2*Scale,0*Scale)))
holoScale(A, vec(1.4*Scale,1.4*Scale,1.05*Scale))
holoColor(A,Color)
#Eccentric Rod Left Detailing
A=23
B=holoEntity(8)
holoCreate(A)
holoModel(A,"models/sprops/rectangles_thin/size_0/rect_1_5x54x1_5.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(ERL/2*Scale,-2*Scale,0*Scale)))
holoScale(A, vec(ERL/54*Scale,1*Scale,1.7*Scale))
holoColor(A,Color)
#Eccentric Rod Right Detailing
A=24
B=holoEntity(10)
holoCreate(A)
holoModel(A,"models/sprops/rectangles_thin/size_0/rect_1_5x54x1_5.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(ERL/2*Scale,2*Scale,0*Scale)))
holoScale(A, vec(ERL/54*Scale,1*Scale,1.7*Scale))
holoColor(A,Color)
#Combination Lever Left Detailing
A=27
B=holoEntity(17)
holoCreate(A)
holoModel(A,"models/sprops/cylinders/size_2/cylinder_3x3.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,90)) )
holoPos(A,B:toWorld(vec(0*Scale,2*Scale,0*Scale)))
holoScale(A, vec(1.4*Scale,1.4*Scale,1.4*Scale))
holoColor(A,Color)
A=28
B=holoEntity(17)
holoCreate(A)
holoModel(A,"models/sprops/rectangles_thin/size_0/rect_1_5x24x1_5.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(90,0,0)) )
holoPos(A,B:toWorld(vec(0*Scale,2*Scale,-(CL/2)*Scale)))
holoScale(A, vec(CL/24*Scale,1*Scale,2*Scale))
holoColor(A,Color)
A=29
B=holoEntity(17)
holoCreate(A)
holoModel(A,"models/sprops/cylinders/size_2/cylinder_3x3.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,90)) )
holoPos(A,B:toWorld(vec(0*Scale,2*Scale,-CL*Scale)))
holoScale(A, vec(1.45*Scale,1.45*Scale,1*Scale))
holoColor(A,Color)
#Combination Lever Right Detailing
A=30
B=holoEntity(18)
holoCreate(A)
holoModel(A,"models/sprops/cylinders/size_2/cylinder_3x3.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,90)) )
holoPos(A,B:toWorld(vec(0*Scale,-2*Scale,0*Scale)))
holoScale(A, vec(1.4*Scale,1.4*Scale,1.4*Scale))
holoColor(A,Color)
A=31
B=holoEntity(18)
holoCreate(A)
holoModel(A,"models/sprops/rectangles_thin/size_0/rect_1_5x24x1_5.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(90,0,0)) )
holoPos(A,B:toWorld(vec(0*Scale,-2*Scale,-(CL/2)*Scale)))
holoScale(A, vec(CL/24*Scale,1*Scale,2*Scale))
holoColor(A,Color)
A=32
B=holoEntity(18)
holoCreate(A)
holoModel(A,"models/sprops/cylinders/size_2/cylinder_3x3.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,90)) )
holoPos(A,B:toWorld(vec(0*Scale,-2*Scale,-CL*Scale)))
holoScale(A, vec(1.45*Scale,1.45*Scale,1*Scale))
holoColor(A,Color)

#Union Link Left Detailing
A=37
B=holoEntity(15)
holoCreate(A)
holoModel(A,"models/sprops/rectangles_thin/size_0/rect_1_5x12x1_5.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(-(UL/2)*Scale,-2*Scale,0*Scale)))
holoScale(A, vec((UL/12)*Scale,1*Scale,1.7*Scale))
holoColor(A,Color)
A=38
B=holoEntity(15)
holoCreate(A)
holoModel(A,"models/sprops/cylinders/size_2/cylinder_3x6.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,90)) )
holoPos(A,B:toWorld(vec(0*Scale,0*Scale,0*Scale)))
holoScale(A, vec(1*Scale,1*Scale,1*Scale))
holoColor(A,Color)
holoAlpha(A,0)
#Union Link Right Detailing
A=39
B=holoEntity(16)
holoCreate(A)
holoModel(A,"models/sprops/rectangles_thin/size_0/rect_1_5x12x1_5.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(-(UL/2)*Scale,2*Scale,0*Scale)))
holoScale(A, vec((UL/12)*Scale,1*Scale,1.7*Scale))
holoColor(A,Color)
A=40
B=holoEntity(16)
holoCreate(A)
holoModel(A,"models/sprops/cylinders/size_2/cylinder_3x6.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,90)) )
holoPos(A,B:toWorld(vec(0*Scale,0*Scale,0*Scale)))
holoScale(A, vec(1*Scale,1*Scale,1*Scale))
holoColor(A,Color)
holoAlpha(A,0)
#Eccentric Crank Left Detailing
A=41
B=holoEntity(7)
holoCreate(A)
holoModel(A,"models/zexciv_train_stuff/details/expansionlink.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,-90,16)) )
holoPos(A,B:toWorld(vec(0*Scale,1.5*Scale,0.3*Scale)*1.4))
holoScale(A, vec(0.5*Scale,0.5*Scale,0.58*Scale)*1.4)
holoColor(A,Color)

A=44
B=holoEntity(8)
holoCreate(A)
holoModel(A,"models/sprops/cylinders/size_2/cylinder_3x3.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,90)) )
holoPos(A,B:toWorld(vec(0*Scale,-2*Scale,0*Scale)))
holoScale(A, vec(1*Scale,1*Scale,1.3*Scale))
holoColor(A,Color)

#Eccentric Crank Right Detailing
A=46
B=holoEntity(9)
holoCreate(A)
holoModel(A,"models/zexciv_train_stuff/details/expansionlink.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,-90,16)) )
holoPos(A,B:toWorld(vec(0*Scale,-1.5*Scale,0.3*Scale)*1.4))
holoScale(A, vec(0.5*Scale,0.5*Scale,0.58*Scale)*1.4)
holoColor(A,Color)

A=49
B=holoEntity(10)
holoCreate(A)
holoModel(A,"models/sprops/cylinders/size_2/cylinder_3x3.mdl")
holoMaterial(A,RodMat)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,90)) )
holoPos(A,B:toWorld(vec(0*Scale,2*Scale,0*Scale)))
holoScale(A, vec(1*Scale,1*Scale,1.3*Scale))
holoColor(A,Color)

holoCreate(50,Base:toWorld(vec(150,52,25)),vec(0),Base:toWorld(ang(0,0,0)),vec4(255,255,255,255))
holoParent(50,Base)
holoCreate(51,Base:toWorld(vec(150,-52,25)),vec(0),Base:toWorld(ang(0,0,0)),vec4(255,255,255,255))
holoParent(51,Base)

local P2MVlvStmR = p2mCreate(1,holoEntity(50):pos(), holoEntity(50):angles())

P2MVlvStmR:p2mPushModel(1,"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl",vec(23.5,-SSN,0)*1.5,ang(90,0,0),vec(1,1,4)*1.5,0,0,0,
array(vec(0,0,StemLength),vec(0,0,-1)))
P2MVlvStmR:p2mPushModel(1,"models/sprops/rectangles_thin/size_1/rect_3x6x1_5.mdl",vec(1.5,-SSN,0)*1.5,ang(0,0,90),vec(1,0.65,1.2)*1.5,0,0,0,array(vec(-0.8,0,0),vec(1,0,0)))
P2MVlvStmR:p2mPushModel(1,"models/sprops/cylinders/size_1/cylinder_1_5x3.mdl",vec(0,-SSN,0),ang(0,0,90),vec(4,4,1),0,0,0)
P2MVlvStmR:p2mPushModel(1,"models/sprops/cylinders/size_1/cylinder_1_5x3.mdl",vec(0,-SSN,0),ang(0,0,90),vec(2.75,2.75,2),0,0,0)
P2MVlvStmR:p2mPushModel(1,"models/sprops/cylinders/size_1/cylinder_1_5x3.mdl",vec(3.5,-SSN,1)*1.5,ang(0,0,0),vec(0.5,0.5,0.7)*1.5,0,0,0)

P2MVlvStmR:p2mBuild()
P2MVlvStmR:parentTo(holoEntity(50))
P2MVlvStmR:p2mSetMaterial(1,RodMat)
P2MVlvStmR:p2mSetUV(1,60)
P2MVlvStmR:p2mSetColor(1,Color)


local P2MVlvStmL = p2mCreate(1,holoEntity(51):pos(), holoEntity(51):angles())

P2MVlvStmL:p2mPushModel(1,"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl",vec(23.5,SSN,0)*1.5,ang(90,0,0),vec(1,1,4)*1.5,10,0,0,
array(vec(0,0,StemLength),vec(0,0,-1)))
P2MVlvStmL:p2mPushModel(1,"models/sprops/rectangles_thin/size_1/rect_3x6x1_5.mdl",vec(1.5,SSN,0)*1.5,ang(0,0,90),vec(1,0.65,1.2)*1.5,0,0,0,array(vec(-0.8,0,0),vec(1,0,0)))
P2MVlvStmL:p2mPushModel(1,"models/sprops/cylinders/size_1/cylinder_1_5x3.mdl",vec(0,SSN,0),ang(0,0,90),vec(4,4,1),0,0,0)
P2MVlvStmL:p2mPushModel(1,"models/sprops/cylinders/size_1/cylinder_1_5x3.mdl",vec(0,SSN,0),ang(0,0,90),vec(2.75,2.75,2),0,0,0)
P2MVlvStmL:p2mPushModel(1,"models/sprops/cylinders/size_1/cylinder_1_5x3.mdl",vec(3.5,SSN,1)*1.5,ang(0,0,0),vec(0.5,0.5,0.7)*1.5,0,0,0)

P2MVlvStmL:p2mBuild()
P2MVlvStmL:parentTo(holoEntity(51))
P2MVlvStmL:p2mSetMaterial(1,RodMat)
P2MVlvStmL:p2mSetUV(1,60)
P2MVlvStmL:p2mSetColor(1,Color)

#-----------------------------------------------------------------------------#

    #Right Radius
    A = 52 
    B = holoEntity(9)
    holoCreate(A)
    holoParent(A,B)
    holoModel(A,"")
    holoScale(A,vec(0))
    holoPos(A,B:toWorld(vec(0,0,0)))
    holoAng(A,B:toWorld(ang(0,0,0)))
    holoColor(A,vec(127))

    A = 53 
    B = holoEntity(52)
    holoCreate(A)
    holoParent(A,B)
    holoModel(A,"models/sprops/rectangles_thin/size_0/rect_1_5x72x1_5.mdl")
    holoScale(A,vec(1))
    holoPos(A,B:toWorld(vec(37,0,0)))
    holoAng(A,B:toWorld(ang(0,0,0)))
    holoColor(A,vec(255))
#    holoMaterial(A,RodMat)
    holoAlpha(A,0)
    
    A = 54 
    B = holoEntity(18)
    holoCreate(A)
    holoParent(A,B)
    holoModel(A,"")
    holoScale(A,vec(0))
    holoPos(A,B:toWorld(vec(0,0,0)))
    holoAng(A,B:toWorld(ang(0,0,0)))
    holoColor(A,vec(255))

#-----------------------------------------------------------------------------#

    #Left Radius
    A = 55 
    B = holoEntity(7)
    holoCreate(A)
    holoParent(A,B)
    holoModel(A,"")
    holoScale(A,vec(0))
    holoPos(A,B:toWorld(vec(0,0,0)))
    holoAng(A,B:toWorld(ang(0,0,0)))
    holoColor(A,vec(127))

    A = 56 
    B = holoEntity(55)
    holoCreate(A)
    holoParent(A,B)
    holoModel(A,"models/sprops/rectangles_thin/size_0/rect_1_5x72x1_5.mdl")
    holoScale(A,vec(1))
    holoPos(A,B:toWorld(vec(37,0,0)))
    holoAng(A,B:toWorld(ang(0,0,0)))
    holoColor(A,vec(255))
#    holoMaterial(A,RodMat)
    holoAlpha(A,0)
    
    #ACTUAL Combo connector Left
    A = 57
    B = holoEntity(17)
    holoCreate(A)
    holoParent(A,B)
    holoModel(A,"")
    holoScale(A,vec(0))
    holoPos(A,B:toWorld(vec(0,0,0)))
    holoAng(A,B:toWorld(ang(0,0,0)))
    holoColor(A,vec(255))
    
#-----------------------------------------------------------------------------#

    #
    #ACTUAL Combo connector Right
    A = 58 
    B = holoEntity(18)
    holoCreate(A)
    holoParent(A,B)
    holoModel(A,"models/sprops/rectangles_thin/size_1/rect_3x6x1_5.mdl")
    holoScale(A,vec(1))
    holoPos(A,B:toWorld(vec(0,-2,3)))
    holoAng(A,B:toWorld(ang(90,0,90)))
    holoColor(A,Color)
    holoMaterial(A,RodMat)

    #Radius to combo parent Right
    A = 59 
    B = holoEntity(58)
    holoCreate(A)
    holoParent(A,B)
    holoModel(A,"")
    holoScale(A,vec(0))
    holoPos(A,B:toWorld(vec(-3,0,0)))
    holoAng(A,B:toWorld(ang(0,0,0)))
    holoColor(A,vec(255))

    #
    #ACTUAL Combo connector Right
    A = 60 
    B = holoEntity(17)
    holoCreate(A)
    holoParent(A,B)
    holoModel(A,"models/sprops/rectangles_thin/size_1/rect_3x6x1_5.mdl")
    holoScale(A,vec(1))
    holoPos(A,B:toWorld(vec(0,2,3)))
    holoAng(A,B:toWorld(ang(90,0,90)))
    holoColor(A,Color)
    holoMaterial(A,RodMat)

#-----------------------------------------------------------------------------#

    #Radius to combo parent Left
    A = 61 
    B = holoEntity(60)
    holoCreate(A)
    holoParent(A,B)
    holoModel(A,"")
    holoScale(A,vec(0))
    holoPos(A,B:toWorld(vec(-3,0,0)))
    holoAng(A,B:toWorld(ang(0,0,0)))
    holoColor(A,vec(255))
    
    #Actual Combo Connector Detail Left
    A = 62 
    B = holoEntity(58)
    holoCreate(A)
    holoParent(A,B)
    holoModel(A,"models/sprops/cylinders/size_2/cylinder_3x3.mdl")
    holoScale(A,vec(1.65,1.65,1))
    holoPos(A,B:toWorld(vec(-3,0,0)))
    holoAng(A,B:toWorld(ang(0,0,0)))
    holoColor(A,Color)
    holoMaterial(A,RodMat)

    #Actual Combo Connector Detail Left
    A = 63 
    B = holoEntity(60)
    holoCreate(A)
    holoParent(A,B)
    holoModel(A,"models/sprops/cylinders/size_2/cylinder_3x3.mdl")
    holoScale(A,vec(1.65,1.65,1))
    holoPos(A,B:toWorld(vec(-3,0,0)))
    holoAng(A,B:toWorld(ang(0,0,0)))
    holoColor(A,Color)
    holoMaterial(A,RodMat)

#------------------------------#
 
    #Right Radius Detail
    P2MID = 1
    B = holoEntity(53)
    P2M = p2mCreate(P2MID,
    B:toWorld(vec(0)),
    B:toWorld(ang(0)))
    
#--------------------------------------------------------------------------------------------------------------#
      
    P2M:p2mPushModel(P2MID,table("model" = "models/unionsparts/radiusrod_1.mdl","pos" = vec(-36.3,0,0),
    "ang" = ang(0,-90,-4.36), "scale" = vec(RadiusWideness,1,1), "clips" = array(vec(0,22.8,0),vec(0,-1,0))
    ))

#--------------------------------------------------------------------------------------------------------------#

    #End of RRadius Mesh
    P2M:p2mBuild()
    P2M:p2mSetMaterial(P2MID,RodMat)
    P2M:p2mSetColor(Color)
    P2M:parentTo(B) 
    
#----------------------------------------#
       
    #Left Radius Detail
    P2MID2 = 1
    B = holoEntity(56)
    P2M2 = p2mCreate(P2MID2,
    B:toWorld(vec(0)),
    B:toWorld(ang(0)))
    
#--------------------------------------------------------------------------------------------------------------#
    
    P2M2:p2mPushModel(P2MID2,table("model" = "models/unionsparts/radiusrod_1.mdl","pos" = vec(-36.3,0,0),
    "ang" = ang(0,-90,-4.36), "scale" = vec(RadiusWideness,1,1), "clips" = array(vec(0,22.8,0),vec(0,-1,0))
    ))
    
#--------------------------------------------------------------------------------------------------------------#

    #End of LRadius Mesh
    P2M2:p2mBuild()
    P2M2:p2mSetMaterial(P2MID2,RodMat)
    P2M2:p2mSetColor(Color)
    P2M2:parentTo(B) 
    
#--------------------------------------------------------------------------------------------------------------#
    
    A=65
    B=holoEntity(56)
    holoCreate(A)
    holoModel(A,"models/sprops/rectangles_thin/size_0/rect_1_5x54x1_5.mdl")
    holoMaterial(A,RodMat)
    holoParent(A, B)
    holoAng(A, B:toWorld(ang(0,0,0)) )
    holoPos(A,B:toWorld(vec(-13.5*Scale,0*Scale,0*Scale)))
    holoScale(A, vec(RRL/54*Scale,0.9*Scale,1.6*Scale))
    holoColor(A,Color)
    holoClipEnabled(A,1)
    holoClip(A,1,vec(-5,0,0),vec(1,0,0),0)
    
    A=66
    B=holoEntity(53)
    holoCreate(A)
    holoModel(A,"models/sprops/rectangles_thin/size_0/rect_1_5x54x1_5.mdl")
    holoMaterial(A,RodMat)
    holoParent(A, B)
    holoAng(A, B:toWorld(ang(0,0,0)) )
    holoPos(A,B:toWorld(vec(-13.5*Scale,0*Scale,0*Scale)))
    holoScale(A, vec(RRL/54*Scale,0.9*Scale,1.6*Scale))
    holoColor(A,Color)
    holoClipEnabled(A,1)
    holoClip(A,1,vec(-5,0,0),vec(1,0,0),0)

#----------------------------------------#

A=67
B=holoEntity(7)
holoCreate(A)
holoModel(A,"models/unionsparts/expansionlink_1.mdl")
holoMaterial(A,"magtrains/invisible")
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,180,0)) )
holoPos(A,B:toWorld(vec(-0.3*Scale,1.45*Scale,-4.5*Scale)*1.4))
holoScale(A, vec(0.55*Scale,0.65*Scale,0.55*Scale)*1.4)
holoColor(A,Color)

A=68
B=holoEntity(9)
holoCreate(A)
holoModel(A,"models/unionsparts/expansionlink_1.mdl")
holoMaterial(A,"magtrains/invisible")
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,180,0)) )
holoPos(A,B:toWorld(vec(-0.3*Scale,-1.45*Scale,-4.5*Scale)*1.4))
holoScale(A, vec(0.55*Scale,0.65*Scale,0.55*Scale)*1.4)
holoColor(A,Color)

#----------------------------------------#

B=holoEntity(67)
ATotal = 1
local P2M3=p2mCreate(ATotal,B:pos(), B:toWorld(ang(0,0,0)))
P2M3:p2mSetParent(B)

A = 1
P2M3:p2mPushModel(A,"models/unionsparts/expansionlink_1.mdl",array(),

vec((0*Scale)*1.4,(0*Scale)*1.4,(0*Scale)*1.4),

ang(0,90,0),

vec((0.65*Scale)*1.4,(0.65*Scale)*1.4,(0.55*Scale)*1.4)

,0,0,(0),array(vec(0,0,0),vec(0,0,0)))
P2M3:p2mSetMaterial(A,E2MSion)
P2M3:p2mBuild()



B=holoEntity(68)
ATotal = 1
local P2M4=p2mCreate(ATotal,B:pos(), B:toWorld(ang(0,0,0)))
P2M4:p2mSetParent(B)

A = 1
P2M4:p2mPushModel(A,"models/unionsparts/expansionlink_1.mdl",array(),

vec((0*Scale)*1.4,(0*Scale)*1.4,(0*Scale)*1.4),

ang(0,90,0),

vec((0.65*Scale)*1.4,(0.65*Scale)*1.4,(0.55*Scale)*1.4)

,0,0,(0),array(vec(0,0,0),vec(0,0,0)))
P2M4:p2mSetMaterial(A,E2MSion) 
P2M4:p2mBuild()

#----------------------------------------#
#[

    A = 100 
    B = holoEntity()
    holoCreate(A)
    holoParent(A,B)
    holoModel(A,"")
    holoScale(A,vec(1))
    holoPos(A,B:toWorld(vec(0,0,0)))
    holoAng(A,B:toWorld(ang(0,0,0)))
    holoColor(A,vec(255))

]#
#----------------------------------------#
#Union Connector Optional Thingy

if(UCD == 0){
holoAlpha(38,255)
holoAlpha(40,255)
}elseif(UCD == 1){
holoAlpha(38,0)
holoAlpha(40,0)
}

if(EXP == 0){
holoAlpha(41,255)
holoAlpha(46,255)
}elseif(EXP == 1){
holoAlpha(41,0)
holoAlpha(46,0)
}
#----------------------------------------#
}
#----------------------------------------#

EccSwingL=(sin(WheelRotation-(OGRotation-RotationOffset)))
EccSwingR=(cos(WheelRotation-(OGRotation-RotationOffset)))
ComboSwingL=(sin(WheelRotation)*CAM+CAO)
ComboSwingR=(cos(WheelRotation)*CAM+CAO)
Aaa=(PistonForward-sqrt((PistonForward^2)-(Radius^2)))

#------------------------------------------------------------------------------------------#

PMoveL=(-sin(WheelRotation)*Radius)-(Aaa*abs(cos(WheelRotation)))


EccRAngL=(-Reverser*7)+(abs(Reverser)*(1-Reverser)*sin(abs(EccAngL/20)*15))
EccAngL=-cos(WheelRotation+10)*20
ComboAngL=-atan(PMoveL/21)+(EccAngL*3.9/20*-Reverser)
                    #divide PMove by the length in inches of the combination lever
ValveStemL=(-sin(ComboAngL)*3)+(EccAngL*1.2/20*-Reverser)
                          # multiply sin(ComboAng) by the distance in inches 
                          # the valve stem is above or below the rotation
                          # point of the combination lever

#------------------------------------------------------------------------------------------#

PMoveR=(-cos(WheelRotation)*Radius)-(Aaa*abs(sin(WheelRotation)))
EccRAngR=(-Reverser*7)+(abs(Reverser)*(1-Reverser)*sin(abs(EccAngR/20)*15))
EccAngR=sin(WheelRotation+10)*20
ComboAngR=-atan(PMoveR/21)+(EccAngR*3.9/20*-Reverser)
                    #divide PMove by the length in inches of the combination lever
ValveStemR=(-sin(ComboAngR)*3)+(EccAngR*1.2/20*-Reverser)
                          # multiply sin(ComboAng) by the distance in inches 
                          # the valve stem is above or below the rotation
                          # point of the combination lever

#------------------------------------------------------------------------------------------#
#

holoAng(7, Base:toWorld(ang((EccSwingL*EM)-EA,0,0)) )
holoAng(9, Base:toWorld(ang((EccSwingR*EM)-EA,0,0)) )
holoAng(17,Base:toWorld(ang((ComboSwingL+ValveStemL)*ValveStemMul,0,0)))        
holoAng(18,Base:toWorld(ang((ComboSwingR+ValveStemR)*ValveStemMul,0,0)) )

#Right
holoPos(18,Base:toWorld(vec( ((-ComboSwingR/10)-0.42)+ValveStemR ,0,0)
+vec(100*Scale,(-PRWidth-4)*Scale,22*Scale)+CO*vec(1,-1,1)*Scale))  

#Left
holoPos(17,Base:toWorld(vec( ((-ComboSwingL/10)-0.42)+ValveStemL ,0,0)
+vec(100*Scale,(PRWidth+4)*Scale,22*Scale)+CO*Scale))

    holoPos(50,holoEntity(18):toWorld(vec(0,-2,0))) #Right
    holoPos(51,holoEntity(17):toWorld(vec(0,2,0))) #Left
    holoPos(52,holoEntity(9):toWorld(vec((0+Reverser)*RadiusSlide,-2.12,6*-Reverser))) #Right
    holoPos(55,holoEntity(7):toWorld(vec((0+Reverser)*RadiusSlide,2.12,6*-Reverser))) #Left

#holoAng(15, PL:toWorld(ang(0,0,0)) )
#holoAng(16, PR:toWorld(ang(0,0,0)) )
local EccRodAngL=(holoEntity(3):pos()-holoEntity(8):pos()):toAngle()
holoAng(8,EccRodAngL)

local EccRodAngR=(holoEntity(6):pos()-holoEntity(10):pos()):toAngle()
holoAng(10,EccRodAngR)

local UnionLinkAngL=(holoEntity(15):pos()-holoEntity(19):pos()):toAngle()
holoAng(15,UnionLinkAngL)

local UnionLinkAngR=(holoEntity(16):pos()-holoEntity(20):pos()):toAngle()
holoAng(16,UnionLinkAngR)

local RadiusR=(holoEntity(59):pos()-holoEntity(52):pos()):toAngle()
holoAng(52,RadiusR+ang(0,0,0))

local RadiusL=(holoEntity(61):pos()-holoEntity(55):pos()):toAngle()
holoAng(55,RadiusL+ang(0,0,0)) 

#interval(50)
